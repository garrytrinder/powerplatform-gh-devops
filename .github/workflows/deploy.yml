name: Deploy solution to environment

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'Name of the solution'
        required: true
        default: Contoso
      environment_url:
        description: 'URL of the environment to deploy the solution to'
        required: true
        default: https://orgd3e762c1.crm11.dynamics.com
      build_environment_url:
        description: 'URL of the environment to build the solution in'
        required: true
        default: https://org4c264e1e.crm11.dynamics.com
      tenant_id:
        description: 'Tenant ID where the environments are located'
        required: true
        default: ba849a9d-e594-49b2-a4fd-a62f28d46a24
      client_id:
        description: 'Client ID of the Service Principal'
        required: true
        default: 9731d9ca-caa2-46ac-a63d-27170f99e8aa

env:
  ENVIRONMENT_URL: ${{ github.event.inputs.environment_url }}
  BUILD_ENVIRONMENT_URL: ${{ github.event.inputs.build_environment_url }}
  TENANT_ID: ${{ github.event.inputs.tenant_id }}
  CLIENT_ID: ${{ github.event.inputs.client_id }}
  SOLUTION_NAME: ${{ github.event.inputs.solution_name }}
  SOLUTION_FOLDER: solutions/${{ github.event.inputs.solution_name }}
  SOLUTION_OUTBOUND_FOLDER: out/solutions/
  SOLUTION_SHIP_FOLDER: out/ship/
  SOLUTION_RELEASE_FOLDER: out/release/

jobs:
  convert-solution-to-managed:
    name: Convert solution to managed
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pack solution from source control
      uses: microsoft/powerplatform-actions/pack-solution@0.4.2
      with:
        solution-folder: ${{ env.SOLUTION_FOLDER }}
        solution-file: ${{ env.SOLUTION_OUTBOUND_FOLDER }}/${{ env.SOLUTION_NAME }}.zip
        solution-type: Unmanaged

    - name: Import solution as unmanaged to build environment
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWER_PLATFORM_SPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.SOLUTION_OUTBOUND_FOLDER }}/${{ env.SOLUTION_NAME }}.zip
        force-overwrite: true
        publish-changes: true

    - name: Export solution as managed from build environment
      uses: microsoft/powerplatform-actions/export-solution@0.4.0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWER_PLATFORM_SPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ env.SOLUTION_NAME }}
        managed: true
        solution-output-file: ${{ env.SOLUTION_SHIP_FOLDER}}/${{ env.SOLUTION_NAME }}.zip

    - name: Publish solution artifact
      uses: actions/upload-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.SOLUTION_SHIP_FOLDER}}/${{ env.SOLUTION_NAME }}.zip

  deploy-managed-solution-to-environment:
    name: Deploy managed solution
    needs: [ convert-solution-to-managed ]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Download solution artifact
      uses: actions/download-artifact@v2
      with:
        name: managedSolutions
        path: ${{ env.SOLUTION_RELEASE_FOLDER}}

    - name: Import and publish solution
      uses: microsoft/powerplatform-actions/import-solution@0.4.0
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.POWER_PLATFORM_SPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-file: ${{ env.SOLUTION_RELEASE_FOLDER}}/${{ github.event.inputs.solution_name }}.zip
        force-overwrite: true
        publish-changes: true
